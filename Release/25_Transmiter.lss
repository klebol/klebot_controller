
25_Transmiter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  00000f5a  00000fee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f5a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003e  00800142  00800142  00001030  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001030  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001060  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  000010a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00001694  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000001a  00000000  00000000  00001c36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00001c50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 0b 05 	jmp	0xa16	; 0xa16 <__vector_7>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 9a 03 	jmp	0x734	; 0x734 <__vector_18>
  4c:	0c 94 d5 03 	jmp	0x7aa	; 0x7aa <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e5       	ldi	r30, 0x5A	; 90
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 34       	cpi	r26, 0x42	; 66
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e4       	ldi	r26, 0x42	; 66
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 38       	cpi	r26, 0x80	; 128
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <main>
  9e:	0c 94 ab 07 	jmp	0xf56	; 0xf56 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SPI_Init>:
  a6:	23 9a       	sbi	0x04, 3	; 4
  a8:	24 9a       	sbi	0x04, 4	; 4
  aa:	25 9a       	sbi	0x04, 5	; 4
  ac:	22 9a       	sbi	0x04, 2	; 4
  ae:	8c b5       	in	r24, 0x2c	; 44
  b0:	81 65       	ori	r24, 0x51	; 81
  b2:	8c bd       	out	0x2c, r24	; 44
  b4:	08 95       	ret

000000b6 <SPI_Send>:
  b6:	28 2f       	mov	r18, r24
  b8:	fc 01       	movw	r30, r24
  ba:	8e 2f       	mov	r24, r30
  bc:	82 1b       	sub	r24, r18
  be:	86 17       	cp	r24, r22
  c0:	30 f4       	brcc	.+12     	; 0xce <SPI_Send+0x18>
  c2:	81 91       	ld	r24, Z+
  c4:	8e bd       	out	0x2e, r24	; 46
  c6:	0d b4       	in	r0, 0x2d	; 45
  c8:	07 fe       	sbrs	r0, 7
  ca:	fd cf       	rjmp	.-6      	; 0xc6 <SPI_Send+0x10>
  cc:	f6 cf       	rjmp	.-20     	; 0xba <SPI_Send+0x4>
  ce:	08 95       	ret

000000d0 <SPI_Read>:
  d0:	fc 01       	movw	r30, r24
  d2:	9e 2f       	mov	r25, r30
  d4:	98 1b       	sub	r25, r24
  d6:	96 17       	cp	r25, r22
  d8:	38 f4       	brcc	.+14     	; 0xe8 <SPI_Read+0x18>
  da:	1e bc       	out	0x2e, r1	; 46
  dc:	0d b4       	in	r0, 0x2d	; 45
  de:	07 fe       	sbrs	r0, 7
  e0:	fd cf       	rjmp	.-6      	; 0xdc <SPI_Read+0xc>
  e2:	9e b5       	in	r25, 0x2e	; 46
  e4:	91 93       	st	Z+, r25
  e6:	f5 cf       	rjmp	.-22     	; 0xd2 <SPI_Read+0x2>
  e8:	08 95       	ret

000000ea <nRF24_WriteRegister>:
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	00 d0       	rcall	.+0      	; 0xf0 <nRF24_WriteRegister+0x6>
  f0:	cd b7       	in	r28, 0x3d	; 61
  f2:	de b7       	in	r29, 0x3e	; 62
  f4:	80 62       	ori	r24, 0x20	; 32
  f6:	89 83       	std	Y+1, r24	; 0x01
  f8:	6a 83       	std	Y+2, r22	; 0x02
  fa:	2a 98       	cbi	0x05, 2	; 5
  fc:	62 e0       	ldi	r22, 0x02	; 2
  fe:	ce 01       	movw	r24, r28
 100:	01 96       	adiw	r24, 0x01	; 1
 102:	0e 94 5b 00 	call	0xb6	; 0xb6 <SPI_Send>
 106:	2a 9a       	sbi	0x05, 2	; 5
 108:	0f 90       	pop	r0
 10a:	0f 90       	pop	r0
 10c:	df 91       	pop	r29
 10e:	cf 91       	pop	r28
 110:	08 95       	ret

00000112 <nRF24_WriteRegisters>:
 112:	ff 92       	push	r15
 114:	0f 93       	push	r16
 116:	1f 93       	push	r17
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	1f 92       	push	r1
 11e:	cd b7       	in	r28, 0x3d	; 61
 120:	de b7       	in	r29, 0x3e	; 62
 122:	8b 01       	movw	r16, r22
 124:	f4 2e       	mov	r15, r20
 126:	80 62       	ori	r24, 0x20	; 32
 128:	89 83       	std	Y+1, r24	; 0x01
 12a:	2a 98       	cbi	0x05, 2	; 5
 12c:	61 e0       	ldi	r22, 0x01	; 1
 12e:	ce 01       	movw	r24, r28
 130:	01 96       	adiw	r24, 0x01	; 1
 132:	0e 94 5b 00 	call	0xb6	; 0xb6 <SPI_Send>
 136:	6f 2d       	mov	r22, r15
 138:	c8 01       	movw	r24, r16
 13a:	0e 94 5b 00 	call	0xb6	; 0xb6 <SPI_Send>
 13e:	2a 9a       	sbi	0x05, 2	; 5
 140:	0f 90       	pop	r0
 142:	df 91       	pop	r29
 144:	cf 91       	pop	r28
 146:	1f 91       	pop	r17
 148:	0f 91       	pop	r16
 14a:	ff 90       	pop	r15
 14c:	08 95       	ret

0000014e <nRF24_ReadRegister>:
 14e:	cf 93       	push	r28
 150:	df 93       	push	r29
 152:	00 d0       	rcall	.+0      	; 0x154 <nRF24_ReadRegister+0x6>
 154:	cd b7       	in	r28, 0x3d	; 61
 156:	de b7       	in	r29, 0x3e	; 62
 158:	8a 83       	std	Y+2, r24	; 0x02
 15a:	2a 98       	cbi	0x05, 2	; 5
 15c:	61 e0       	ldi	r22, 0x01	; 1
 15e:	ce 01       	movw	r24, r28
 160:	02 96       	adiw	r24, 0x02	; 2
 162:	0e 94 5b 00 	call	0xb6	; 0xb6 <SPI_Send>
 166:	61 e0       	ldi	r22, 0x01	; 1
 168:	ce 01       	movw	r24, r28
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	0e 94 68 00 	call	0xd0	; 0xd0 <SPI_Read>
 170:	2a 9a       	sbi	0x05, 2	; 5
 172:	89 81       	ldd	r24, Y+1	; 0x01
 174:	0f 90       	pop	r0
 176:	0f 90       	pop	r0
 178:	df 91       	pop	r29
 17a:	cf 91       	pop	r28
 17c:	08 95       	ret

0000017e <nRF24_ReadRegisters>:
 17e:	ff 92       	push	r15
 180:	0f 93       	push	r16
 182:	1f 93       	push	r17
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	1f 92       	push	r1
 18a:	cd b7       	in	r28, 0x3d	; 61
 18c:	de b7       	in	r29, 0x3e	; 62
 18e:	89 83       	std	Y+1, r24	; 0x01
 190:	8b 01       	movw	r16, r22
 192:	f4 2e       	mov	r15, r20
 194:	2a 98       	cbi	0x05, 2	; 5
 196:	61 e0       	ldi	r22, 0x01	; 1
 198:	ce 01       	movw	r24, r28
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	0e 94 5b 00 	call	0xb6	; 0xb6 <SPI_Send>
 1a0:	6f 2d       	mov	r22, r15
 1a2:	c8 01       	movw	r24, r16
 1a4:	0e 94 68 00 	call	0xd0	; 0xd0 <SPI_Read>
 1a8:	2a 9a       	sbi	0x05, 2	; 5
 1aa:	0f 90       	pop	r0
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	1f 91       	pop	r17
 1b2:	0f 91       	pop	r16
 1b4:	ff 90       	pop	r15
 1b6:	08 95       	ret

000001b8 <nRF24_SetRXAddress.part.1>:
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	00 d0       	rcall	.+0      	; 0x1be <nRF24_SetRXAddress.part.1+0x6>
 1be:	1f 92       	push	r1
 1c0:	cd b7       	in	r28, 0x3d	; 61
 1c2:	de b7       	in	r29, 0x3e	; 62
 1c4:	fb 01       	movw	r30, r22
 1c6:	90 81       	ld	r25, Z
 1c8:	9b 83       	std	Y+3, r25	; 0x03
 1ca:	91 81       	ldd	r25, Z+1	; 0x01
 1cc:	9a 83       	std	Y+2, r25	; 0x02
 1ce:	92 81       	ldd	r25, Z+2	; 0x02
 1d0:	99 83       	std	Y+1, r25	; 0x01
 1d2:	43 e0       	ldi	r20, 0x03	; 3
 1d4:	be 01       	movw	r22, r28
 1d6:	6f 5f       	subi	r22, 0xFF	; 255
 1d8:	7f 4f       	sbci	r23, 0xFF	; 255
 1da:	86 5f       	subi	r24, 0xF6	; 246
 1dc:	0e 94 89 00 	call	0x112	; 0x112 <nRF24_WriteRegisters>
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	08 95       	ret

000001ec <nRF24_ReadConfig>:
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	0c 94 a7 00 	jmp	0x14e	; 0x14e <nRF24_ReadRegister>

000001f2 <nRF24_WriteConfig>:
 1f2:	68 2f       	mov	r22, r24
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

000001fa <nRF24_SetPALevel>:
 1fa:	cf 93       	push	r28
 1fc:	c8 2f       	mov	r28, r24
 1fe:	86 e0       	ldi	r24, 0x06	; 6
 200:	0e 94 a7 00 	call	0x14e	; 0x14e <nRF24_ReadRegister>
 204:	6c 2f       	mov	r22, r28
 206:	66 0f       	add	r22, r22
 208:	88 7f       	andi	r24, 0xF8	; 248
 20a:	68 2b       	or	r22, r24
 20c:	86 e0       	ldi	r24, 0x06	; 6
 20e:	cf 91       	pop	r28
 210:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

00000214 <nRF24_SetDataRate>:
 214:	cf 93       	push	r28
 216:	c8 2f       	mov	r28, r24
 218:	86 e0       	ldi	r24, 0x06	; 6
 21a:	0e 94 a7 00 	call	0x14e	; 0x14e <nRF24_ReadRegister>
 21e:	68 2f       	mov	r22, r24
 220:	67 7d       	andi	r22, 0xD7	; 215
 222:	c2 30       	cpi	r28, 0x02	; 2
 224:	11 f4       	brne	.+4      	; 0x22a <nRF24_SetDataRate+0x16>
 226:	60 62       	ori	r22, 0x20	; 32
 228:	03 c0       	rjmp	.+6      	; 0x230 <nRF24_SetDataRate+0x1c>
 22a:	c1 30       	cpi	r28, 0x01	; 1
 22c:	09 f4       	brne	.+2      	; 0x230 <nRF24_SetDataRate+0x1c>
 22e:	68 60       	ori	r22, 0x08	; 8
 230:	86 e0       	ldi	r24, 0x06	; 6
 232:	cf 91       	pop	r28
 234:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

00000238 <nRF24_ReadStatus>:
 238:	87 e0       	ldi	r24, 0x07	; 7
 23a:	0c 94 a7 00 	jmp	0x14e	; 0x14e <nRF24_ReadRegister>

0000023e <nRF24_WriteStatus>:
 23e:	68 2f       	mov	r22, r24
 240:	87 e0       	ldi	r24, 0x07	; 7
 242:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

00000246 <nRF24_ReadFifoStatus>:
 246:	87 e1       	ldi	r24, 0x17	; 23
 248:	0c 94 a7 00 	jmp	0x14e	; 0x14e <nRF24_ReadRegister>

0000024c <nRF24_WriteFifoStatus>:
 24c:	68 2f       	mov	r22, r24
 24e:	87 e1       	ldi	r24, 0x17	; 23
 250:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

00000254 <nRF24_IsBitSetInFifoStatus>:
 254:	cf 93       	push	r28
 256:	c8 2f       	mov	r28, r24
 258:	0e 94 23 01 	call	0x246	; 0x246 <nRF24_ReadFifoStatus>
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 c0       	rjmp	.+4      	; 0x264 <nRF24_IsBitSetInFifoStatus+0x10>
 260:	95 95       	asr	r25
 262:	87 95       	ror	r24
 264:	ca 95       	dec	r28
 266:	e2 f7       	brpl	.-8      	; 0x260 <nRF24_IsBitSetInFifoStatus+0xc>
 268:	81 70       	andi	r24, 0x01	; 1
 26a:	cf 91       	pop	r28
 26c:	08 95       	ret

0000026e <nRF24_IsTxReuse>:
 26e:	86 e0       	ldi	r24, 0x06	; 6
 270:	0c 94 2a 01 	jmp	0x254	; 0x254 <nRF24_IsBitSetInFifoStatus>

00000274 <nRF24_IsTxEmpty>:
 274:	84 e0       	ldi	r24, 0x04	; 4
 276:	0c 94 2a 01 	jmp	0x254	; 0x254 <nRF24_IsBitSetInFifoStatus>

0000027a <nRF24_IsRxFull>:
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	0c 94 2a 01 	jmp	0x254	; 0x254 <nRF24_IsBitSetInFifoStatus>

00000280 <nRF24_IsRxEmpty>:
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	0c 94 2a 01 	jmp	0x254	; 0x254 <nRF24_IsBitSetInFifoStatus>

00000286 <nRF24_IsTxFull>:
 286:	0c 94 40 01 	jmp	0x280	; 0x280 <nRF24_IsRxEmpty>

0000028a <nRF24_FlushRX>:
 28a:	cf 93       	push	r28
 28c:	df 93       	push	r29
 28e:	1f 92       	push	r1
 290:	cd b7       	in	r28, 0x3d	; 61
 292:	de b7       	in	r29, 0x3e	; 62
 294:	82 ee       	ldi	r24, 0xE2	; 226
 296:	89 83       	std	Y+1, r24	; 0x01
 298:	2a 98       	cbi	0x05, 2	; 5
 29a:	61 e0       	ldi	r22, 0x01	; 1
 29c:	ce 01       	movw	r24, r28
 29e:	01 96       	adiw	r24, 0x01	; 1
 2a0:	0e 94 5b 00 	call	0xb6	; 0xb6 <SPI_Send>
 2a4:	2a 9a       	sbi	0x05, 2	; 5
 2a6:	0f 90       	pop	r0
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	08 95       	ret

000002ae <nRF24_FlushTX>:
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	1f 92       	push	r1
 2b4:	cd b7       	in	r28, 0x3d	; 61
 2b6:	de b7       	in	r29, 0x3e	; 62
 2b8:	81 ee       	ldi	r24, 0xE1	; 225
 2ba:	89 83       	std	Y+1, r24	; 0x01
 2bc:	2a 98       	cbi	0x05, 2	; 5
 2be:	61 e0       	ldi	r22, 0x01	; 1
 2c0:	ce 01       	movw	r24, r28
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	0e 94 5b 00 	call	0xb6	; 0xb6 <SPI_Send>
 2c8:	2a 9a       	sbi	0x05, 2	; 5
 2ca:	0f 90       	pop	r0
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	08 95       	ret

000002d2 <nRF24_TX_Mode>:
 2d2:	5f 98       	cbi	0x0b, 7	; 11
 2d4:	0e 94 f6 00 	call	0x1ec	; 0x1ec <nRF24_ReadConfig>
 2d8:	8e 7f       	andi	r24, 0xFE	; 254
 2da:	82 60       	ori	r24, 0x02	; 2
 2dc:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <nRF24_WriteConfig>
 2e0:	80 e7       	ldi	r24, 0x70	; 112
 2e2:	0e 94 1f 01 	call	0x23e	; 0x23e <nRF24_WriteStatus>
 2e6:	0e 94 45 01 	call	0x28a	; 0x28a <nRF24_FlushRX>
 2ea:	0e 94 57 01 	call	0x2ae	; 0x2ae <nRF24_FlushTX>
 2ee:	8f e9       	ldi	r24, 0x9F	; 159
 2f0:	9f e0       	ldi	r25, 0x0F	; 15
 2f2:	01 97       	sbiw	r24, 0x01	; 1
 2f4:	f1 f7       	brne	.-4      	; 0x2f2 <nRF24_TX_Mode+0x20>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <nRF24_TX_Mode+0x26>
 2f8:	00 00       	nop
 2fa:	08 95       	ret

000002fc <nRF24_RX_Mode>:
 2fc:	cf 93       	push	r28
 2fe:	0e 94 f6 00 	call	0x1ec	; 0x1ec <nRF24_ReadConfig>
 302:	c8 2f       	mov	r28, r24
 304:	66 e4       	ldi	r22, 0x46	; 70
 306:	71 e0       	ldi	r23, 0x01	; 1
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <nRF24_SetRXAddress.part.1>
 30e:	8c 2f       	mov	r24, r28
 310:	83 60       	ori	r24, 0x03	; 3
 312:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <nRF24_WriteConfig>
 316:	80 e7       	ldi	r24, 0x70	; 112
 318:	0e 94 1f 01 	call	0x23e	; 0x23e <nRF24_WriteStatus>
 31c:	0e 94 45 01 	call	0x28a	; 0x28a <nRF24_FlushRX>
 320:	0e 94 57 01 	call	0x2ae	; 0x2ae <nRF24_FlushTX>
 324:	5f 9a       	sbi	0x0b, 7	; 11
 326:	8f e9       	ldi	r24, 0x9F	; 159
 328:	9f e0       	ldi	r25, 0x0F	; 15
 32a:	01 97       	sbiw	r24, 0x01	; 1
 32c:	f1 f7       	brne	.-4      	; 0x32a <nRF24_RX_Mode+0x2e>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <nRF24_RX_Mode+0x34>
 330:	00 00       	nop
 332:	cf 91       	pop	r28
 334:	08 95       	ret

00000336 <nRF24_EnableCRC>:
 336:	cf 93       	push	r28
 338:	c8 2f       	mov	r28, r24
 33a:	0e 94 f6 00 	call	0x1ec	; 0x1ec <nRF24_ReadConfig>
 33e:	cc 23       	and	r28, r28
 340:	11 f0       	breq	.+4      	; 0x346 <nRF24_EnableCRC+0x10>
 342:	88 60       	ori	r24, 0x08	; 8
 344:	01 c0       	rjmp	.+2      	; 0x348 <nRF24_EnableCRC+0x12>
 346:	87 7f       	andi	r24, 0xF7	; 247
 348:	cf 91       	pop	r28
 34a:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <nRF24_WriteConfig>

0000034e <nRF24_SetCRCLength>:
 34e:	cf 93       	push	r28
 350:	c8 2f       	mov	r28, r24
 352:	0e 94 f6 00 	call	0x1ec	; 0x1ec <nRF24_ReadConfig>
 356:	c1 30       	cpi	r28, 0x01	; 1
 358:	11 f4       	brne	.+4      	; 0x35e <nRF24_SetCRCLength+0x10>
 35a:	84 60       	ori	r24, 0x04	; 4
 35c:	01 c0       	rjmp	.+2      	; 0x360 <nRF24_SetCRCLength+0x12>
 35e:	8b 7f       	andi	r24, 0xFB	; 251
 360:	cf 91       	pop	r28
 362:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <nRF24_WriteConfig>

00000366 <nRF24_SetRetries>:
 366:	20 e1       	ldi	r18, 0x10	; 16
 368:	82 9f       	mul	r24, r18
 36a:	c0 01       	movw	r24, r0
 36c:	11 24       	eor	r1, r1
 36e:	6f 70       	andi	r22, 0x0F	; 15
 370:	68 2b       	or	r22, r24
 372:	84 e0       	ldi	r24, 0x04	; 4
 374:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

00000378 <nRF24_SetRFChannel>:
 378:	68 2f       	mov	r22, r24
 37a:	6f 77       	andi	r22, 0x7F	; 127
 37c:	85 e0       	ldi	r24, 0x05	; 5
 37e:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

00000382 <nRF24_SetPayloadSize>:
 382:	6f 73       	andi	r22, 0x3F	; 63
 384:	86 30       	cpi	r24, 0x06	; 6
 386:	08 f0       	brcs	.+2      	; 0x38a <nRF24_SetPayloadSize+0x8>
 388:	85 e0       	ldi	r24, 0x05	; 5
 38a:	8f 5e       	subi	r24, 0xEF	; 239
 38c:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

00000390 <nRF24_EnablePipe>:
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	d6 2f       	mov	r29, r22
 396:	c8 2f       	mov	r28, r24
 398:	86 30       	cpi	r24, 0x06	; 6
 39a:	08 f0       	brcs	.+2      	; 0x39e <nRF24_EnablePipe+0xe>
 39c:	c5 e0       	ldi	r28, 0x05	; 5
 39e:	82 e0       	ldi	r24, 0x02	; 2
 3a0:	0e 94 a7 00 	call	0x14e	; 0x14e <nRF24_ReadRegister>
 3a4:	61 e0       	ldi	r22, 0x01	; 1
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	01 c0       	rjmp	.+2      	; 0x3ac <nRF24_EnablePipe+0x1c>
 3aa:	66 0f       	add	r22, r22
 3ac:	ca 95       	dec	r28
 3ae:	ea f7       	brpl	.-6      	; 0x3aa <nRF24_EnablePipe+0x1a>
 3b0:	d1 30       	cpi	r29, 0x01	; 1
 3b2:	11 f4       	brne	.+4      	; 0x3b8 <nRF24_EnablePipe+0x28>
 3b4:	68 2b       	or	r22, r24
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <nRF24_EnablePipe+0x2c>
 3b8:	60 95       	com	r22
 3ba:	68 23       	and	r22, r24
 3bc:	82 e0       	ldi	r24, 0x02	; 2
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

000003c6 <nRF24_AutoACK>:
 3c6:	cf 93       	push	r28
 3c8:	df 93       	push	r29
 3ca:	d6 2f       	mov	r29, r22
 3cc:	c8 2f       	mov	r28, r24
 3ce:	86 30       	cpi	r24, 0x06	; 6
 3d0:	08 f0       	brcs	.+2      	; 0x3d4 <nRF24_AutoACK+0xe>
 3d2:	c5 e0       	ldi	r28, 0x05	; 5
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	0e 94 a7 00 	call	0x14e	; 0x14e <nRF24_ReadRegister>
 3da:	61 e0       	ldi	r22, 0x01	; 1
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	01 c0       	rjmp	.+2      	; 0x3e2 <nRF24_AutoACK+0x1c>
 3e0:	66 0f       	add	r22, r22
 3e2:	ca 95       	dec	r28
 3e4:	ea f7       	brpl	.-6      	; 0x3e0 <nRF24_AutoACK+0x1a>
 3e6:	d1 30       	cpi	r29, 0x01	; 1
 3e8:	11 f4       	brne	.+4      	; 0x3ee <nRF24_AutoACK+0x28>
 3ea:	68 2b       	or	r22, r24
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <nRF24_AutoACK+0x2c>
 3ee:	60 95       	com	r22
 3f0:	68 23       	and	r22, r24
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	df 91       	pop	r29
 3f6:	cf 91       	pop	r28
 3f8:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

000003fc <nRF24_SetAddressWidth>:
 3fc:	86 30       	cpi	r24, 0x06	; 6
 3fe:	20 f4       	brcc	.+8      	; 0x408 <nRF24_SetAddressWidth+0xc>
 400:	83 30       	cpi	r24, 0x03	; 3
 402:	18 f4       	brcc	.+6      	; 0x40a <nRF24_SetAddressWidth+0xe>
 404:	83 e0       	ldi	r24, 0x03	; 3
 406:	01 c0       	rjmp	.+2      	; 0x40a <nRF24_SetAddressWidth+0xe>
 408:	85 e0       	ldi	r24, 0x05	; 5
 40a:	6e ef       	ldi	r22, 0xFE	; 254
 40c:	68 0f       	add	r22, r24
 40e:	83 e0       	ldi	r24, 0x03	; 3
 410:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

00000414 <nRF24_SetRXAddress>:
 414:	82 30       	cpi	r24, 0x02	; 2
 416:	10 f4       	brcc	.+4      	; 0x41c <nRF24_SetRXAddress+0x8>
 418:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <nRF24_SetRXAddress.part.1>
 41c:	fb 01       	movw	r30, r22
 41e:	62 81       	ldd	r22, Z+2	; 0x02
 420:	86 5f       	subi	r24, 0xF6	; 246
 422:	0c 94 75 00 	jmp	0xea	; 0xea <nRF24_WriteRegister>

00000426 <nRF24_SetTXAddress>:
 426:	0f 93       	push	r16
 428:	1f 93       	push	r17
 42a:	cf 93       	push	r28
 42c:	df 93       	push	r29
 42e:	00 d0       	rcall	.+0      	; 0x430 <nRF24_SetTXAddress+0xa>
 430:	1f 92       	push	r1
 432:	cd b7       	in	r28, 0x3d	; 61
 434:	de b7       	in	r29, 0x3e	; 62
 436:	8c 01       	movw	r16, r24
 438:	43 e0       	ldi	r20, 0x03	; 3
 43a:	be 01       	movw	r22, r28
 43c:	6f 5f       	subi	r22, 0xFF	; 255
 43e:	7f 4f       	sbci	r23, 0xFF	; 255
 440:	8a e0       	ldi	r24, 0x0A	; 10
 442:	0e 94 bf 00 	call	0x17e	; 0x17e <nRF24_ReadRegisters>
 446:	e6 e4       	ldi	r30, 0x46	; 70
 448:	f1 e0       	ldi	r31, 0x01	; 1
 44a:	89 81       	ldd	r24, Y+1	; 0x01
 44c:	82 83       	std	Z+2, r24	; 0x02
 44e:	8a 81       	ldd	r24, Y+2	; 0x02
 450:	81 83       	std	Z+1, r24	; 0x01
 452:	8b 81       	ldd	r24, Y+3	; 0x03
 454:	80 83       	st	Z, r24
 456:	f8 01       	movw	r30, r16
 458:	80 81       	ld	r24, Z
 45a:	8b 83       	std	Y+3, r24	; 0x03
 45c:	81 81       	ldd	r24, Z+1	; 0x01
 45e:	8a 83       	std	Y+2, r24	; 0x02
 460:	82 81       	ldd	r24, Z+2	; 0x02
 462:	89 83       	std	Y+1, r24	; 0x01
 464:	43 e0       	ldi	r20, 0x03	; 3
 466:	be 01       	movw	r22, r28
 468:	6f 5f       	subi	r22, 0xFF	; 255
 46a:	7f 4f       	sbci	r23, 0xFF	; 255
 46c:	8a e0       	ldi	r24, 0x0A	; 10
 46e:	0e 94 89 00 	call	0x112	; 0x112 <nRF24_WriteRegisters>
 472:	43 e0       	ldi	r20, 0x03	; 3
 474:	be 01       	movw	r22, r28
 476:	6f 5f       	subi	r22, 0xFF	; 255
 478:	7f 4f       	sbci	r23, 0xFF	; 255
 47a:	80 e1       	ldi	r24, 0x10	; 16
 47c:	0e 94 89 00 	call	0x112	; 0x112 <nRF24_WriteRegisters>
 480:	0f 90       	pop	r0
 482:	0f 90       	pop	r0
 484:	0f 90       	pop	r0
 486:	df 91       	pop	r29
 488:	cf 91       	pop	r28
 48a:	1f 91       	pop	r17
 48c:	0f 91       	pop	r16
 48e:	08 95       	ret

00000490 <nRF24_ClearInterrupts>:
 490:	0e 94 1c 01 	call	0x238	; 0x238 <nRF24_ReadStatus>
 494:	80 67       	ori	r24, 0x70	; 112
 496:	0c 94 1f 01 	jmp	0x23e	; 0x23e <nRF24_WriteStatus>

0000049a <nRF24_GetDynamicPayloadSize>:
 49a:	80 e6       	ldi	r24, 0x60	; 96
 49c:	0e 94 a7 00 	call	0x14e	; 0x14e <nRF24_ReadRegister>
 4a0:	81 32       	cpi	r24, 0x21	; 33
 4a2:	48 f0       	brcs	.+18     	; 0x4b6 <nRF24_GetDynamicPayloadSize+0x1c>
 4a4:	0e 94 45 01 	call	0x28a	; 0x28a <nRF24_FlushRX>
 4a8:	8f e9       	ldi	r24, 0x9F	; 159
 4aa:	9f e0       	ldi	r25, 0x0F	; 15
 4ac:	01 97       	sbiw	r24, 0x01	; 1
 4ae:	f1 f7       	brne	.-4      	; 0x4ac <nRF24_GetDynamicPayloadSize+0x12>
 4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <nRF24_GetDynamicPayloadSize+0x18>
 4b2:	00 00       	nop
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	08 95       	ret

000004b8 <nRF24_EnableRXDataReadyIRQ>:
 4b8:	cf 93       	push	r28
 4ba:	c8 2f       	mov	r28, r24
 4bc:	0e 94 f6 00 	call	0x1ec	; 0x1ec <nRF24_ReadConfig>
 4c0:	c1 11       	cpse	r28, r1
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <nRF24_EnableRXDataReadyIRQ+0x10>
 4c4:	80 64       	ori	r24, 0x40	; 64
 4c6:	01 c0       	rjmp	.+2      	; 0x4ca <nRF24_EnableRXDataReadyIRQ+0x12>
 4c8:	8f 7b       	andi	r24, 0xBF	; 191
 4ca:	cf 91       	pop	r28
 4cc:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <nRF24_WriteConfig>

000004d0 <nRF24_EnableTXDataSentIRQ>:
 4d0:	cf 93       	push	r28
 4d2:	c8 2f       	mov	r28, r24
 4d4:	0e 94 f6 00 	call	0x1ec	; 0x1ec <nRF24_ReadConfig>
 4d8:	c1 11       	cpse	r28, r1
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <nRF24_EnableTXDataSentIRQ+0x10>
 4dc:	80 62       	ori	r24, 0x20	; 32
 4de:	01 c0       	rjmp	.+2      	; 0x4e2 <nRF24_EnableTXDataSentIRQ+0x12>
 4e0:	8f 7d       	andi	r24, 0xDF	; 223
 4e2:	cf 91       	pop	r28
 4e4:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <nRF24_WriteConfig>

000004e8 <nRF24_EnableMaxRetransmitIRQ>:
 4e8:	cf 93       	push	r28
 4ea:	c8 2f       	mov	r28, r24
 4ec:	0e 94 f6 00 	call	0x1ec	; 0x1ec <nRF24_ReadConfig>
 4f0:	c1 11       	cpse	r28, r1
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <nRF24_EnableMaxRetransmitIRQ+0x10>
 4f4:	80 61       	ori	r24, 0x10	; 16
 4f6:	01 c0       	rjmp	.+2      	; 0x4fa <nRF24_EnableMaxRetransmitIRQ+0x12>
 4f8:	8f 7e       	andi	r24, 0xEF	; 239
 4fa:	cf 91       	pop	r28
 4fc:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <nRF24_WriteConfig>

00000500 <nRF24_WriteTXPayload>:
 500:	46 2f       	mov	r20, r22
 502:	bc 01       	movw	r22, r24
 504:	80 ea       	ldi	r24, 0xA0	; 160
 506:	0c 94 89 00 	jmp	0x112	; 0x112 <nRF24_WriteRegisters>

0000050a <nRF24_WaitTX>:
 50a:	5f 9a       	sbi	0x0b, 7	; 11
 50c:	8f e9       	ldi	r24, 0x9F	; 159
 50e:	9f e0       	ldi	r25, 0x0F	; 15
 510:	01 97       	sbiw	r24, 0x01	; 1
 512:	f1 f7       	brne	.-4      	; 0x510 <nRF24_WaitTX+0x6>
 514:	00 c0       	rjmp	.+0      	; 0x516 <nRF24_WaitTX+0xc>
 516:	00 00       	nop
 518:	5f 98       	cbi	0x0b, 7	; 11
 51a:	8f e9       	ldi	r24, 0x9F	; 159
 51c:	9f e0       	ldi	r25, 0x0F	; 15
 51e:	01 97       	sbiw	r24, 0x01	; 1
 520:	f1 f7       	brne	.-4      	; 0x51e <nRF24_WaitTX+0x14>
 522:	00 c0       	rjmp	.+0      	; 0x524 <nRF24_WaitTX+0x1a>
 524:	00 00       	nop
 526:	0e 94 1c 01 	call	0x238	; 0x238 <nRF24_ReadStatus>
 52a:	80 73       	andi	r24, 0x30	; 48
 52c:	b1 f3       	breq	.-20     	; 0x51a <nRF24_WaitTX+0x10>
 52e:	08 95       	ret

00000530 <nRF24_ReadRXPaylaod>:
 530:	0f 93       	push	r16
 532:	1f 93       	push	r17
 534:	cf 93       	push	r28
 536:	df 93       	push	r29
 538:	ec 01       	movw	r28, r24
 53a:	8b 01       	movw	r16, r22
 53c:	0e 94 4d 02 	call	0x49a	; 0x49a <nRF24_GetDynamicPayloadSize>
 540:	f8 01       	movw	r30, r16
 542:	80 83       	st	Z, r24
 544:	48 2f       	mov	r20, r24
 546:	be 01       	movw	r22, r28
 548:	81 e6       	ldi	r24, 0x61	; 97
 54a:	df 91       	pop	r29
 54c:	cf 91       	pop	r28
 54e:	1f 91       	pop	r17
 550:	0f 91       	pop	r16
 552:	0c 94 bf 00 	jmp	0x17e	; 0x17e <nRF24_ReadRegisters>

00000556 <nRF24_SendPacket>:
 556:	61 32       	cpi	r22, 0x21	; 33
 558:	30 f4       	brcc	.+12     	; 0x566 <nRF24_SendPacket+0x10>
 55a:	0e 94 80 02 	call	0x500	; 0x500 <nRF24_WriteTXPayload>
 55e:	0e 94 85 02 	call	0x50a	; 0x50a <nRF24_WaitTX>
 562:	80 e0       	ldi	r24, 0x00	; 0
 564:	08 95       	ret
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	08 95       	ret

0000056a <nRF24_ReceivePacket>:
 56a:	0e 94 98 02 	call	0x530	; 0x530 <nRF24_ReadRXPaylaod>
 56e:	08 95       	ret

00000570 <nRF24_RXAvailible>:
 570:	0e 94 1c 01 	call	0x238	; 0x238 <nRF24_ReadStatus>
 574:	98 2f       	mov	r25, r24
 576:	90 74       	andi	r25, 0x40	; 64
 578:	86 ff       	sbrs	r24, 6
 57a:	07 c0       	rjmp	.+14     	; 0x58a <nRF24_RXAvailible+0x1a>
 57c:	91 e0       	ldi	r25, 0x01	; 1
 57e:	90 93 45 01 	sts	0x0145, r25
 582:	80 64       	ori	r24, 0x40	; 64
 584:	0e 94 1f 01 	call	0x23e	; 0x23e <nRF24_WriteStatus>
 588:	91 e0       	ldi	r25, 0x01	; 1
 58a:	89 2f       	mov	r24, r25
 58c:	08 95       	ret

0000058e <nRF24_IRQ_Handler>:
 58e:	81 e0       	ldi	r24, 0x01	; 1
 590:	80 93 42 01 	sts	0x0142, r24
 594:	08 95       	ret

00000596 <nRF24_IRQ_Read>:
 596:	cf 93       	push	r28
 598:	c0 91 42 01 	lds	r28, 0x0142
 59c:	c1 30       	cpi	r28, 0x01	; 1
 59e:	d9 f4       	brne	.+54     	; 0x5d6 <nRF24_IRQ_Read+0x40>
 5a0:	10 92 42 01 	sts	0x0142, r1
 5a4:	0e 94 1c 01 	call	0x238	; 0x238 <nRF24_ReadStatus>
 5a8:	98 2f       	mov	r25, r24
 5aa:	86 ff       	sbrs	r24, 6
 5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <nRF24_IRQ_Read+0x20>
 5ae:	c0 93 45 01 	sts	0x0145, r28
 5b2:	80 e4       	ldi	r24, 0x40	; 64
 5b4:	01 c0       	rjmp	.+2      	; 0x5b8 <nRF24_IRQ_Read+0x22>
 5b6:	80 e0       	ldi	r24, 0x00	; 0
 5b8:	95 ff       	sbrs	r25, 5
 5ba:	04 c0       	rjmp	.+8      	; 0x5c4 <nRF24_IRQ_Read+0x2e>
 5bc:	21 e0       	ldi	r18, 0x01	; 1
 5be:	20 93 44 01 	sts	0x0144, r18
 5c2:	80 62       	ori	r24, 0x20	; 32
 5c4:	94 ff       	sbrs	r25, 4
 5c6:	04 c0       	rjmp	.+8      	; 0x5d0 <nRF24_IRQ_Read+0x3a>
 5c8:	91 e0       	ldi	r25, 0x01	; 1
 5ca:	90 93 43 01 	sts	0x0143, r25
 5ce:	80 61       	ori	r24, 0x10	; 16
 5d0:	cf 91       	pop	r28
 5d2:	0c 94 1f 01 	jmp	0x23e	; 0x23e <nRF24_WriteStatus>
 5d6:	cf 91       	pop	r28
 5d8:	08 95       	ret

000005da <nRF24_EventRxCallback>:
 5da:	08 95       	ret
 5dc:	08 95       	ret

000005de <nRF24_EventMrCallback>:
 5de:	08 95       	ret

000005e0 <nRF24_Event>:
 5e0:	0e 94 cb 02 	call	0x596	; 0x596 <nRF24_IRQ_Read>
 5e4:	80 91 45 01 	lds	r24, 0x0145
 5e8:	88 23       	and	r24, r24
 5ea:	21 f0       	breq	.+8      	; 0x5f4 <nRF24_Event+0x14>
 5ec:	0e 94 ed 02 	call	0x5da	; 0x5da <nRF24_EventRxCallback>
 5f0:	10 92 45 01 	sts	0x0145, r1
 5f4:	80 91 44 01 	lds	r24, 0x0144
 5f8:	88 23       	and	r24, r24
 5fa:	21 f0       	breq	.+8      	; 0x604 <nRF24_Event+0x24>
 5fc:	0e 94 20 05 	call	0xa40	; 0xa40 <nRF24_EventTxCallback>
 600:	10 92 44 01 	sts	0x0144, r1
 604:	80 91 43 01 	lds	r24, 0x0143
 608:	88 23       	and	r24, r24
 60a:	21 f0       	breq	.+8      	; 0x614 <nRF24_Event+0x34>
 60c:	0e 94 ef 02 	call	0x5de	; 0x5de <nRF24_EventMrCallback>
 610:	10 92 43 01 	sts	0x0143, r1
 614:	08 95       	ret

00000616 <nRF24_Init>:
 616:	22 9a       	sbi	0x04, 2	; 4
 618:	2a 9a       	sbi	0x05, 2	; 5
 61a:	57 9a       	sbi	0x0a, 7	; 10
 61c:	5f 98       	cbi	0x0b, 7	; 11
 61e:	2a 9a       	sbi	0x05, 2	; 5
 620:	8f e9       	ldi	r24, 0x9F	; 159
 622:	9f e0       	ldi	r25, 0x0F	; 15
 624:	01 97       	sbiw	r24, 0x01	; 1
 626:	f1 f7       	brne	.-4      	; 0x624 <nRF24_Init+0xe>
 628:	00 c0       	rjmp	.+0      	; 0x62a <nRF24_Init+0x14>
 62a:	00 00       	nop
 62c:	83 e0       	ldi	r24, 0x03	; 3
 62e:	0e 94 fd 00 	call	0x1fa	; 0x1fa <nRF24_SetPALevel>
 632:	82 e0       	ldi	r24, 0x02	; 2
 634:	0e 94 0a 01 	call	0x214	; 0x214 <nRF24_SetDataRate>
 638:	81 e0       	ldi	r24, 0x01	; 1
 63a:	0e 94 9b 01 	call	0x336	; 0x336 <nRF24_EnableCRC>
 63e:	80 e0       	ldi	r24, 0x00	; 0
 640:	0e 94 a7 01 	call	0x34e	; 0x34e <nRF24_SetCRCLength>
 644:	67 e4       	ldi	r22, 0x47	; 71
 646:	84 e0       	ldi	r24, 0x04	; 4
 648:	0e 94 75 00 	call	0xea	; 0xea <nRF24_WriteRegister>
 64c:	8d e1       	ldi	r24, 0x1D	; 29
 64e:	0e 94 a7 00 	call	0x14e	; 0x14e <nRF24_ReadRegister>
 652:	68 2f       	mov	r22, r24
 654:	64 60       	ori	r22, 0x04	; 4
 656:	8d e1       	ldi	r24, 0x1D	; 29
 658:	0e 94 75 00 	call	0xea	; 0xea <nRF24_WriteRegister>
 65c:	6f e3       	ldi	r22, 0x3F	; 63
 65e:	8c e1       	ldi	r24, 0x1C	; 28
 660:	0e 94 75 00 	call	0xea	; 0xea <nRF24_WriteRegister>
 664:	8a e0       	ldi	r24, 0x0A	; 10
 666:	0e 94 bc 01 	call	0x378	; 0x378 <nRF24_SetRFChannel>
 66a:	61 e0       	ldi	r22, 0x01	; 1
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	0e 94 c8 01 	call	0x390	; 0x390 <nRF24_EnablePipe>
 672:	61 e0       	ldi	r22, 0x01	; 1
 674:	80 e0       	ldi	r24, 0x00	; 0
 676:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <nRF24_AutoACK>
 67a:	83 e0       	ldi	r24, 0x03	; 3
 67c:	0e 94 fe 01 	call	0x3fc	; 0x3fc <nRF24_SetAddressWidth>
 680:	8f e9       	ldi	r24, 0x9F	; 159
 682:	9f e0       	ldi	r25, 0x0F	; 15
 684:	01 97       	sbiw	r24, 0x01	; 1
 686:	f1 f7       	brne	.-4      	; 0x684 <nRF24_Init+0x6e>
 688:	00 c0       	rjmp	.+0      	; 0x68a <nRF24_Init+0x74>
 68a:	00 00       	nop
 68c:	80 e0       	ldi	r24, 0x00	; 0
 68e:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <nRF24_EnableRXDataReadyIRQ>
 692:	80 e0       	ldi	r24, 0x00	; 0
 694:	0e 94 68 02 	call	0x4d0	; 0x4d0 <nRF24_EnableTXDataSentIRQ>
 698:	80 e0       	ldi	r24, 0x00	; 0
 69a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <nRF24_EnableMaxRetransmitIRQ>
 69e:	8f e9       	ldi	r24, 0x9F	; 159
 6a0:	9f e0       	ldi	r25, 0x0F	; 15
 6a2:	01 97       	sbiw	r24, 0x01	; 1
 6a4:	f1 f7       	brne	.-4      	; 0x6a2 <nRF24_Init+0x8c>
 6a6:	00 c0       	rjmp	.+0      	; 0x6a8 <nRF24_Init+0x92>
 6a8:	00 00       	nop
 6aa:	0c 94 48 02 	jmp	0x490	; 0x490 <nRF24_ClearInterrupts>

000006ae <uart_init>:
 6ae:	90 93 c5 00 	sts	0x00C5, r25
 6b2:	80 93 c4 00 	sts	0x00C4, r24
 6b6:	e1 ec       	ldi	r30, 0xC1	; 193
 6b8:	f0 e0       	ldi	r31, 0x00	; 0
 6ba:	88 e1       	ldi	r24, 0x18	; 24
 6bc:	80 83       	st	Z, r24
 6be:	80 81       	ld	r24, Z
 6c0:	80 68       	ori	r24, 0x80	; 128
 6c2:	80 83       	st	Z, r24
 6c4:	86 e0       	ldi	r24, 0x06	; 6
 6c6:	80 93 c2 00 	sts	0x00C2, r24
 6ca:	78 94       	sei
 6cc:	08 95       	ret

000006ce <uart_sendc>:
 6ce:	90 91 c0 00 	lds	r25, 0x00C0
 6d2:	95 ff       	sbrs	r25, 5
 6d4:	fc cf       	rjmp	.-8      	; 0x6ce <uart_sendc>
 6d6:	80 93 c6 00 	sts	0x00C6, r24
 6da:	08 95       	ret

000006dc <uart_sends>:
 6dc:	cf 93       	push	r28
 6de:	df 93       	push	r29
 6e0:	ec 01       	movw	r28, r24
 6e2:	89 91       	ld	r24, Y+
 6e4:	88 23       	and	r24, r24
 6e6:	19 f0       	breq	.+6      	; 0x6ee <uart_sends+0x12>
 6e8:	0e 94 67 03 	call	0x6ce	; 0x6ce <uart_sendc>
 6ec:	fa cf       	rjmp	.-12     	; 0x6e2 <uart_sends+0x6>
 6ee:	df 91       	pop	r29
 6f0:	cf 91       	pop	r28
 6f2:	08 95       	ret

000006f4 <uart_sendi>:
 6f4:	cf 93       	push	r28
 6f6:	df 93       	push	r29
 6f8:	00 d0       	rcall	.+0      	; 0x6fa <uart_sendi+0x6>
 6fa:	00 d0       	rcall	.+0      	; 0x6fc <uart_sendi+0x8>
 6fc:	1f 92       	push	r1
 6fe:	cd b7       	in	r28, 0x3d	; 61
 700:	de b7       	in	r29, 0x3e	; 62
 702:	4a e0       	ldi	r20, 0x0A	; 10
 704:	be 01       	movw	r22, r28
 706:	6f 5f       	subi	r22, 0xFF	; 255
 708:	7f 4f       	sbci	r23, 0xFF	; 255
 70a:	0e 94 76 07 	call	0xeec	; 0xeec <__itoa_ncheck>
 70e:	ce 01       	movw	r24, r28
 710:	01 96       	adiw	r24, 0x01	; 1
 712:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 716:	0f 90       	pop	r0
 718:	0f 90       	pop	r0
 71a:	0f 90       	pop	r0
 71c:	0f 90       	pop	r0
 71e:	0f 90       	pop	r0
 720:	df 91       	pop	r29
 722:	cf 91       	pop	r28
 724:	08 95       	ret

00000726 <uart_receivec>:
 726:	80 91 c0 00 	lds	r24, 0x00C0
 72a:	87 ff       	sbrs	r24, 7
 72c:	fc cf       	rjmp	.-8      	; 0x726 <uart_receivec>
 72e:	80 91 c6 00 	lds	r24, 0x00C6
 732:	08 95       	ret

00000734 <__vector_18>:
 734:	1f 92       	push	r1
 736:	0f 92       	push	r0
 738:	0f b6       	in	r0, 0x3f	; 63
 73a:	0f 92       	push	r0
 73c:	11 24       	eor	r1, r1
 73e:	2f 93       	push	r18
 740:	8f 93       	push	r24
 742:	9f 93       	push	r25
 744:	ef 93       	push	r30
 746:	ff 93       	push	r31
 748:	90 91 c6 00 	lds	r25, 0x00C6
 74c:	80 91 6e 01 	lds	r24, 0x016E
 750:	8f 5f       	subi	r24, 0xFF	; 255
 752:	8f 70       	andi	r24, 0x0F	; 15
 754:	20 91 4b 01 	lds	r18, 0x014B
 758:	82 17       	cp	r24, r18
 75a:	41 f0       	breq	.+16     	; 0x76c <__vector_18+0x38>
 75c:	80 93 6e 01 	sts	0x016E, r24
 760:	e0 91 6e 01 	lds	r30, 0x016E
 764:	f0 e0       	ldi	r31, 0x00	; 0
 766:	e4 5b       	subi	r30, 0xB4	; 180
 768:	fe 4f       	sbci	r31, 0xFE	; 254
 76a:	90 83       	st	Z, r25
 76c:	ff 91       	pop	r31
 76e:	ef 91       	pop	r30
 770:	9f 91       	pop	r25
 772:	8f 91       	pop	r24
 774:	2f 91       	pop	r18
 776:	0f 90       	pop	r0
 778:	0f be       	out	0x3f, r0	; 63
 77a:	0f 90       	pop	r0
 77c:	1f 90       	pop	r1
 77e:	18 95       	reti

00000780 <uart_readc>:
 780:	90 91 4b 01 	lds	r25, 0x014B
 784:	80 91 6e 01 	lds	r24, 0x016E
 788:	98 17       	cp	r25, r24
 78a:	69 f0       	breq	.+26     	; 0x7a6 <uart_readc+0x26>
 78c:	80 91 4b 01 	lds	r24, 0x014B
 790:	8f 5f       	subi	r24, 0xFF	; 255
 792:	8f 70       	andi	r24, 0x0F	; 15
 794:	80 93 4b 01 	sts	0x014B, r24
 798:	e0 91 4b 01 	lds	r30, 0x014B
 79c:	f0 e0       	ldi	r31, 0x00	; 0
 79e:	e4 5b       	subi	r30, 0xB4	; 180
 7a0:	fe 4f       	sbci	r31, 0xFE	; 254
 7a2:	80 81       	ld	r24, Z
 7a4:	08 95       	ret
 7a6:	80 e0       	ldi	r24, 0x00	; 0
 7a8:	08 95       	ret

000007aa <__vector_19>:
 7aa:	1f 92       	push	r1
 7ac:	0f 92       	push	r0
 7ae:	0f b6       	in	r0, 0x3f	; 63
 7b0:	0f 92       	push	r0
 7b2:	11 24       	eor	r1, r1
 7b4:	8f 93       	push	r24
 7b6:	9f 93       	push	r25
 7b8:	ef 93       	push	r30
 7ba:	ff 93       	push	r31
 7bc:	90 91 5c 01 	lds	r25, 0x015C
 7c0:	80 91 6d 01 	lds	r24, 0x016D
 7c4:	98 17       	cp	r25, r24
 7c6:	79 f0       	breq	.+30     	; 0x7e6 <__vector_19+0x3c>
 7c8:	80 91 5c 01 	lds	r24, 0x015C
 7cc:	8f 5f       	subi	r24, 0xFF	; 255
 7ce:	8f 70       	andi	r24, 0x0F	; 15
 7d0:	80 93 5c 01 	sts	0x015C, r24
 7d4:	e0 91 5c 01 	lds	r30, 0x015C
 7d8:	f0 e0       	ldi	r31, 0x00	; 0
 7da:	e3 5a       	subi	r30, 0xA3	; 163
 7dc:	fe 4f       	sbci	r31, 0xFE	; 254
 7de:	80 81       	ld	r24, Z
 7e0:	80 93 c6 00 	sts	0x00C6, r24
 7e4:	05 c0       	rjmp	.+10     	; 0x7f0 <__vector_19+0x46>
 7e6:	80 91 c1 00 	lds	r24, 0x00C1
 7ea:	8f 7d       	andi	r24, 0xDF	; 223
 7ec:	80 93 c1 00 	sts	0x00C1, r24
 7f0:	ff 91       	pop	r31
 7f2:	ef 91       	pop	r30
 7f4:	9f 91       	pop	r25
 7f6:	8f 91       	pop	r24
 7f8:	0f 90       	pop	r0
 7fa:	0f be       	out	0x3f, r0	; 63
 7fc:	0f 90       	pop	r0
 7fe:	1f 90       	pop	r1
 800:	18 95       	reti

00000802 <uart_writec>:
 802:	90 91 6d 01 	lds	r25, 0x016D
 806:	9f 5f       	subi	r25, 0xFF	; 255
 808:	9f 70       	andi	r25, 0x0F	; 15
 80a:	20 91 5c 01 	lds	r18, 0x015C
 80e:	92 17       	cp	r25, r18
 810:	69 f0       	breq	.+26     	; 0x82c <uart_writec+0x2a>
 812:	90 93 6d 01 	sts	0x016D, r25
 816:	e0 91 6d 01 	lds	r30, 0x016D
 81a:	f0 e0       	ldi	r31, 0x00	; 0
 81c:	e3 5a       	subi	r30, 0xA3	; 163
 81e:	fe 4f       	sbci	r31, 0xFE	; 254
 820:	80 83       	st	Z, r24
 822:	80 91 c1 00 	lds	r24, 0x00C1
 826:	80 62       	ori	r24, 0x20	; 32
 828:	80 93 c1 00 	sts	0x00C1, r24
 82c:	08 95       	ret

0000082e <uart_writes>:
 82e:	cf 93       	push	r28
 830:	df 93       	push	r29
 832:	ec 01       	movw	r28, r24
 834:	20 97       	sbiw	r28, 0x00	; 0
 836:	21 f0       	breq	.+8      	; 0x840 <uart_writes+0x12>
 838:	89 91       	ld	r24, Y+
 83a:	0e 94 01 04 	call	0x802	; 0x802 <uart_writec>
 83e:	fa cf       	rjmp	.-12     	; 0x834 <uart_writes+0x6>
 840:	df 91       	pop	r29
 842:	cf 91       	pop	r28
 844:	08 95       	ret

00000846 <ADC_Init>:
 846:	ec e7       	ldi	r30, 0x7C	; 124
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	80 81       	ld	r24, Z
 84c:	80 64       	ori	r24, 0x40	; 64
 84e:	80 83       	st	Z, r24
 850:	ea e7       	ldi	r30, 0x7A	; 122
 852:	f0 e0       	ldi	r31, 0x00	; 0
 854:	80 81       	ld	r24, Z
 856:	80 68       	ori	r24, 0x80	; 128
 858:	80 83       	st	Z, r24
 85a:	80 81       	ld	r24, Z
 85c:	86 60       	ori	r24, 0x06	; 6
 85e:	80 83       	st	Z, r24
 860:	08 95       	ret

00000862 <ADC_Read>:
 862:	90 91 7c 00 	lds	r25, 0x007C
 866:	98 7f       	andi	r25, 0xF8	; 248
 868:	89 2b       	or	r24, r25
 86a:	80 93 7c 00 	sts	0x007C, r24
 86e:	80 91 7a 00 	lds	r24, 0x007A
 872:	80 64       	ori	r24, 0x40	; 64
 874:	80 93 7a 00 	sts	0x007A, r24
 878:	80 91 7a 00 	lds	r24, 0x007A
 87c:	86 fd       	sbrc	r24, 6
 87e:	fc cf       	rjmp	.-8      	; 0x878 <ADC_Read+0x16>
 880:	80 91 78 00 	lds	r24, 0x0078
 884:	90 91 79 00 	lds	r25, 0x0079
 888:	96 95       	lsr	r25
 88a:	87 95       	ror	r24
 88c:	96 95       	lsr	r25
 88e:	87 95       	ror	r24
 890:	08 95       	ret

00000892 <Joy_SetIdleValues>:
 892:	cf 93       	push	r28
 894:	df 93       	push	r29
 896:	ec 01       	movw	r28, r24
 898:	8c 81       	ldd	r24, Y+4	; 0x04
 89a:	0e 94 31 04 	call	0x862	; 0x862 <ADC_Read>
 89e:	8a 83       	std	Y+2, r24	; 0x02
 8a0:	8d 81       	ldd	r24, Y+5	; 0x05
 8a2:	0e 94 31 04 	call	0x862	; 0x862 <ADC_Read>
 8a6:	8b 83       	std	Y+3, r24	; 0x03
 8a8:	df 91       	pop	r29
 8aa:	cf 91       	pop	r28
 8ac:	08 95       	ret

000008ae <Joy_ReadXY>:
 8ae:	cf 93       	push	r28
 8b0:	df 93       	push	r29
 8b2:	ec 01       	movw	r28, r24
 8b4:	8c 81       	ldd	r24, Y+4	; 0x04
 8b6:	0e 94 31 04 	call	0x862	; 0x862 <ADC_Read>
 8ba:	88 83       	st	Y, r24
 8bc:	8d 81       	ldd	r24, Y+5	; 0x05
 8be:	0e 94 31 04 	call	0x862	; 0x862 <ADC_Read>
 8c2:	89 83       	std	Y+1, r24	; 0x01
 8c4:	df 91       	pop	r29
 8c6:	cf 91       	pop	r28
 8c8:	08 95       	ret

000008ca <Joy_GetDeviationPercent>:
 8ca:	fc 01       	movw	r30, r24
 8cc:	61 11       	cpse	r22, r1
 8ce:	03 c0       	rjmp	.+6      	; 0x8d6 <Joy_GetDeviationPercent+0xc>
 8d0:	90 81       	ld	r25, Z
 8d2:	62 81       	ldd	r22, Z+2	; 0x02
 8d4:	04 c0       	rjmp	.+8      	; 0x8de <Joy_GetDeviationPercent+0x14>
 8d6:	61 30       	cpi	r22, 0x01	; 1
 8d8:	11 f5       	brne	.+68     	; 0x91e <__stack+0x1f>
 8da:	91 81       	ldd	r25, Z+1	; 0x01
 8dc:	63 81       	ldd	r22, Z+3	; 0x03
 8de:	70 e0       	ldi	r23, 0x00	; 0
 8e0:	29 2f       	mov	r18, r25
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	26 1b       	sub	r18, r22
 8e6:	37 0b       	sbc	r19, r23
 8e8:	37 fd       	sbrc	r19, 7
 8ea:	10 c0       	rjmp	.+32     	; 0x90c <__stack+0xd>
 8ec:	44 e6       	ldi	r20, 0x64	; 100
 8ee:	42 9f       	mul	r20, r18
 8f0:	c0 01       	movw	r24, r0
 8f2:	43 9f       	mul	r20, r19
 8f4:	90 0d       	add	r25, r0
 8f6:	11 24       	eor	r1, r1
 8f8:	2f ef       	ldi	r18, 0xFF	; 255
 8fa:	30 e0       	ldi	r19, 0x00	; 0
 8fc:	a9 01       	movw	r20, r18
 8fe:	46 1b       	sub	r20, r22
 900:	57 0b       	sbc	r21, r23
 902:	ba 01       	movw	r22, r20
 904:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__divmodhi4>
 908:	86 2f       	mov	r24, r22
 90a:	08 95       	ret
 90c:	54 e6       	ldi	r21, 0x64	; 100
 90e:	95 9f       	mul	r25, r21
 910:	c0 01       	movw	r24, r0
 912:	11 24       	eor	r1, r1
 914:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__divmodhi4>
 918:	8c e9       	ldi	r24, 0x9C	; 156
 91a:	86 0f       	add	r24, r22
 91c:	08 95       	ret
 91e:	80 e0       	ldi	r24, 0x00	; 0
 920:	08 95       	ret

00000922 <Joy_GetX>:
 922:	fc 01       	movw	r30, r24
 924:	80 81       	ld	r24, Z
 926:	08 95       	ret

00000928 <Joy_GetY>:
 928:	fc 01       	movw	r30, r24
 92a:	81 81       	ldd	r24, Z+1	; 0x01
 92c:	08 95       	ret

0000092e <KleTransmiter_SendMovementPatternCommand>:
 92e:	cf 93       	push	r28
 930:	df 93       	push	r29
 932:	00 d0       	rcall	.+0      	; 0x934 <KleTransmiter_SendMovementPatternCommand+0x6>
 934:	cd b7       	in	r28, 0x3d	; 61
 936:	de b7       	in	r29, 0x3e	; 62
 938:	93 ea       	ldi	r25, 0xA3	; 163
 93a:	99 83       	std	Y+1, r25	; 0x01
 93c:	8a 83       	std	Y+2, r24	; 0x02
 93e:	62 e0       	ldi	r22, 0x02	; 2
 940:	ce 01       	movw	r24, r28
 942:	01 96       	adiw	r24, 0x01	; 1
 944:	0e 94 ab 02 	call	0x556	; 0x556 <nRF24_SendPacket>
 948:	0f 90       	pop	r0
 94a:	0f 90       	pop	r0
 94c:	df 91       	pop	r29
 94e:	cf 91       	pop	r28
 950:	08 95       	ret

00000952 <KleTransmiter_JoySteering>:
 952:	0f 93       	push	r16
 954:	1f 93       	push	r17
 956:	cf 93       	push	r28
 958:	8c 01       	movw	r16, r24
 95a:	60 e0       	ldi	r22, 0x00	; 0
 95c:	0e 94 65 04 	call	0x8ca	; 0x8ca <Joy_GetDeviationPercent>
 960:	c8 2f       	mov	r28, r24
 962:	61 e0       	ldi	r22, 0x01	; 1
 964:	c8 01       	movw	r24, r16
 966:	0e 94 65 04 	call	0x8ca	; 0x8ca <Joy_GetDeviationPercent>
 96a:	99 e0       	ldi	r25, 0x09	; 9
 96c:	9c 0f       	add	r25, r28
 96e:	93 31       	cpi	r25, 0x13	; 19
 970:	40 f4       	brcc	.+16     	; 0x982 <KleTransmiter_JoySteering+0x30>
 972:	86 35       	cpi	r24, 0x56	; 86
 974:	14 f0       	brlt	.+4      	; 0x97a <KleTransmiter_JoySteering+0x28>
 976:	88 e0       	ldi	r24, 0x08	; 8
 978:	21 c0       	rjmp	.+66     	; 0x9bc <KleTransmiter_JoySteering+0x6a>
 97a:	8b 3a       	cpi	r24, 0xAB	; 171
 97c:	24 f5       	brge	.+72     	; 0x9c6 <KleTransmiter_JoySteering+0x74>
 97e:	87 e0       	ldi	r24, 0x07	; 7
 980:	1d c0       	rjmp	.+58     	; 0x9bc <KleTransmiter_JoySteering+0x6a>
 982:	c6 35       	cpi	r28, 0x56	; 86
 984:	6c f0       	brlt	.+26     	; 0x9a0 <KleTransmiter_JoySteering+0x4e>
 986:	86 35       	cpi	r24, 0x56	; 86
 988:	14 f0       	brlt	.+4      	; 0x98e <KleTransmiter_JoySteering+0x3c>
 98a:	84 e0       	ldi	r24, 0x04	; 4
 98c:	17 c0       	rjmp	.+46     	; 0x9bc <KleTransmiter_JoySteering+0x6a>
 98e:	8b 3a       	cpi	r24, 0xAB	; 171
 990:	14 f4       	brge	.+4      	; 0x996 <KleTransmiter_JoySteering+0x44>
 992:	83 e0       	ldi	r24, 0x03	; 3
 994:	13 c0       	rjmp	.+38     	; 0x9bc <KleTransmiter_JoySteering+0x6a>
 996:	87 5f       	subi	r24, 0xF7	; 247
 998:	83 31       	cpi	r24, 0x13	; 19
 99a:	a8 f4       	brcc	.+42     	; 0x9c6 <KleTransmiter_JoySteering+0x74>
 99c:	81 e0       	ldi	r24, 0x01	; 1
 99e:	0e c0       	rjmp	.+28     	; 0x9bc <KleTransmiter_JoySteering+0x6a>
 9a0:	cb 3a       	cpi	r28, 0xAB	; 171
 9a2:	8c f4       	brge	.+34     	; 0x9c6 <KleTransmiter_JoySteering+0x74>
 9a4:	86 35       	cpi	r24, 0x56	; 86
 9a6:	14 f0       	brlt	.+4      	; 0x9ac <KleTransmiter_JoySteering+0x5a>
 9a8:	86 e0       	ldi	r24, 0x06	; 6
 9aa:	08 c0       	rjmp	.+16     	; 0x9bc <KleTransmiter_JoySteering+0x6a>
 9ac:	8b 3a       	cpi	r24, 0xAB	; 171
 9ae:	14 f4       	brge	.+4      	; 0x9b4 <KleTransmiter_JoySteering+0x62>
 9b0:	85 e0       	ldi	r24, 0x05	; 5
 9b2:	04 c0       	rjmp	.+8      	; 0x9bc <KleTransmiter_JoySteering+0x6a>
 9b4:	87 5f       	subi	r24, 0xF7	; 247
 9b6:	83 31       	cpi	r24, 0x13	; 19
 9b8:	30 f4       	brcc	.+12     	; 0x9c6 <KleTransmiter_JoySteering+0x74>
 9ba:	82 e0       	ldi	r24, 0x02	; 2
 9bc:	cf 91       	pop	r28
 9be:	1f 91       	pop	r17
 9c0:	0f 91       	pop	r16
 9c2:	0c 94 97 04 	jmp	0x92e	; 0x92e <KleTransmiter_SendMovementPatternCommand>
 9c6:	cf 91       	pop	r28
 9c8:	1f 91       	pop	r17
 9ca:	0f 91       	pop	r16
 9cc:	08 95       	ret

000009ce <__vector_2>:
 9ce:	1f 92       	push	r1
 9d0:	0f 92       	push	r0
 9d2:	0f b6       	in	r0, 0x3f	; 63
 9d4:	0f 92       	push	r0
 9d6:	11 24       	eor	r1, r1
 9d8:	2f 93       	push	r18
 9da:	3f 93       	push	r19
 9dc:	4f 93       	push	r20
 9de:	5f 93       	push	r21
 9e0:	6f 93       	push	r22
 9e2:	7f 93       	push	r23
 9e4:	8f 93       	push	r24
 9e6:	9f 93       	push	r25
 9e8:	af 93       	push	r26
 9ea:	bf 93       	push	r27
 9ec:	ef 93       	push	r30
 9ee:	ff 93       	push	r31
 9f0:	0e 94 c7 02 	call	0x58e	; 0x58e <nRF24_IRQ_Handler>
 9f4:	ff 91       	pop	r31
 9f6:	ef 91       	pop	r30
 9f8:	bf 91       	pop	r27
 9fa:	af 91       	pop	r26
 9fc:	9f 91       	pop	r25
 9fe:	8f 91       	pop	r24
 a00:	7f 91       	pop	r23
 a02:	6f 91       	pop	r22
 a04:	5f 91       	pop	r21
 a06:	4f 91       	pop	r20
 a08:	3f 91       	pop	r19
 a0a:	2f 91       	pop	r18
 a0c:	0f 90       	pop	r0
 a0e:	0f be       	out	0x3f, r0	; 63
 a10:	0f 90       	pop	r0
 a12:	1f 90       	pop	r1
 a14:	18 95       	reti

00000a16 <__vector_7>:
 a16:	1f 92       	push	r1
 a18:	0f 92       	push	r0
 a1a:	0f b6       	in	r0, 0x3f	; 63
 a1c:	0f 92       	push	r0
 a1e:	11 24       	eor	r1, r1
 a20:	8f 93       	push	r24
 a22:	80 91 6f 01 	lds	r24, 0x016F
 a26:	88 23       	and	r24, r24
 a28:	29 f0       	breq	.+10     	; 0xa34 <__vector_7+0x1e>
 a2a:	80 91 6f 01 	lds	r24, 0x016F
 a2e:	81 50       	subi	r24, 0x01	; 1
 a30:	80 93 6f 01 	sts	0x016F, r24
 a34:	8f 91       	pop	r24
 a36:	0f 90       	pop	r0
 a38:	0f be       	out	0x3f, r0	; 63
 a3a:	0f 90       	pop	r0
 a3c:	1f 90       	pop	r1
 a3e:	18 95       	reti

00000a40 <nRF24_EventTxCallback>:
 a40:	10 92 7f 01 	sts	0x017F, r1
 a44:	08 95       	ret

00000a46 <HW_Timer2Init>:
 a46:	e0 eb       	ldi	r30, 0xB0	; 176
 a48:	f0 e0       	ldi	r31, 0x00	; 0
 a4a:	80 81       	ld	r24, Z
 a4c:	82 60       	ori	r24, 0x02	; 2
 a4e:	80 83       	st	Z, r24
 a50:	e1 eb       	ldi	r30, 0xB1	; 177
 a52:	f0 e0       	ldi	r31, 0x00	; 0
 a54:	80 81       	ld	r24, Z
 a56:	87 60       	ori	r24, 0x07	; 7
 a58:	80 83       	st	Z, r24
 a5a:	8b e9       	ldi	r24, 0x9B	; 155
 a5c:	80 93 b3 00 	sts	0x00B3, r24
 a60:	e0 e7       	ldi	r30, 0x70	; 112
 a62:	f0 e0       	ldi	r31, 0x00	; 0
 a64:	80 81       	ld	r24, Z
 a66:	82 60       	ori	r24, 0x02	; 2
 a68:	80 83       	st	Z, r24
 a6a:	78 94       	sei
 a6c:	08 95       	ret

00000a6e <MakeFrame>:
 a6e:	cf 92       	push	r12
 a70:	ef 92       	push	r14
 a72:	0f 93       	push	r16
 a74:	fc 01       	movw	r30, r24
 a76:	62 30       	cpi	r22, 0x02	; 2
 a78:	31 f0       	breq	.+12     	; 0xa86 <MakeFrame+0x18>
 a7a:	63 30       	cpi	r22, 0x03	; 3
 a7c:	31 f0       	breq	.+12     	; 0xa8a <MakeFrame+0x1c>
 a7e:	61 30       	cpi	r22, 0x01	; 1
 a80:	31 f4       	brne	.+12     	; 0xa8e <MakeFrame+0x20>
 a82:	81 ea       	ldi	r24, 0xA1	; 161
 a84:	03 c0       	rjmp	.+6      	; 0xa8c <MakeFrame+0x1e>
 a86:	82 ea       	ldi	r24, 0xA2	; 162
 a88:	01 c0       	rjmp	.+2      	; 0xa8c <MakeFrame+0x1e>
 a8a:	83 ea       	ldi	r24, 0xA3	; 163
 a8c:	80 83       	st	Z, r24
 a8e:	41 83       	std	Z+1, r20	; 0x01
 a90:	22 83       	std	Z+2, r18	; 0x02
 a92:	03 83       	std	Z+3, r16	; 0x03
 a94:	e4 82       	std	Z+4, r14	; 0x04
 a96:	c5 82       	std	Z+5, r12	; 0x05
 a98:	0f 91       	pop	r16
 a9a:	ef 90       	pop	r14
 a9c:	cf 90       	pop	r12
 a9e:	08 95       	ret

00000aa0 <Debounce>:
 aa0:	0f 93       	push	r16
 aa2:	1f 93       	push	r17
 aa4:	dc 01       	movw	r26, r24
 aa6:	f8 01       	movw	r30, r16
 aa8:	90 91 4a 01 	lds	r25, 0x014A
 aac:	99 23       	and	r25, r25
 aae:	11 f0       	breq	.+4      	; 0xab4 <Debounce+0x14>
 ab0:	96 13       	cpse	r25, r22
 ab2:	55 c0       	rjmp	.+170    	; 0xb5e <Debounce+0xbe>
 ab4:	9c 91       	ld	r25, X
 ab6:	96 23       	and	r25, r22
 ab8:	80 91 49 01 	lds	r24, 0x0149
 abc:	91 11       	cpse	r25, r1
 abe:	07 c0       	rjmp	.+14     	; 0xace <Debounce+0x2e>
 ac0:	81 11       	cpse	r24, r1
 ac2:	05 c0       	rjmp	.+10     	; 0xace <Debounce+0x2e>
 ac4:	81 e0       	ldi	r24, 0x01	; 1
 ac6:	80 93 49 01 	sts	0x0149, r24
 aca:	83 e0       	ldi	r24, 0x03	; 3
 acc:	10 c0       	rjmp	.+32     	; 0xaee <Debounce+0x4e>
 ace:	88 23       	and	r24, r24
 ad0:	09 f4       	brne	.+2      	; 0xad4 <Debounce+0x34>
 ad2:	45 c0       	rjmp	.+138    	; 0xb5e <Debounce+0xbe>
 ad4:	91 11       	cpse	r25, r1
 ad6:	0e c0       	rjmp	.+28     	; 0xaf4 <Debounce+0x54>
 ad8:	81 30       	cpi	r24, 0x01	; 1
 ada:	a9 f4       	brne	.+42     	; 0xb06 <Debounce+0x66>
 adc:	90 91 6f 01 	lds	r25, 0x016F
 ae0:	91 11       	cpse	r25, r1
 ae2:	3d c0       	rjmp	.+122    	; 0xb5e <Debounce+0xbe>
 ae4:	92 e0       	ldi	r25, 0x02	; 2
 ae6:	90 93 49 01 	sts	0x0149, r25
 aea:	60 93 4a 01 	sts	0x014A, r22
 aee:	80 93 6f 01 	sts	0x016F, r24
 af2:	35 c0       	rjmp	.+106    	; 0xb5e <Debounce+0xbe>
 af4:	9e ef       	ldi	r25, 0xFE	; 254
 af6:	98 0f       	add	r25, r24
 af8:	92 30       	cpi	r25, 0x02	; 2
 afa:	50 f5       	brcc	.+84     	; 0xb50 <Debounce+0xb0>
 afc:	10 92 49 01 	sts	0x0149, r1
 b00:	10 92 4a 01 	sts	0x014A, r1
 b04:	23 c0       	rjmp	.+70     	; 0xb4c <Debounce+0xac>
 b06:	82 30       	cpi	r24, 0x02	; 2
 b08:	79 f4       	brne	.+30     	; 0xb28 <Debounce+0x88>
 b0a:	80 91 6f 01 	lds	r24, 0x016F
 b0e:	81 11       	cpse	r24, r1
 b10:	26 c0       	rjmp	.+76     	; 0xb5e <Debounce+0xbe>
 b12:	83 e0       	ldi	r24, 0x03	; 3
 b14:	80 93 49 01 	sts	0x0149, r24
 b18:	41 15       	cp	r20, r1
 b1a:	51 05       	cpc	r21, r1
 b1c:	11 f4       	brne	.+4      	; 0xb22 <Debounce+0x82>
 b1e:	46 e9       	ldi	r20, 0x96	; 150
 b20:	50 e0       	ldi	r21, 0x00	; 0
 b22:	40 93 6f 01 	sts	0x016F, r20
 b26:	1b c0       	rjmp	.+54     	; 0xb5e <Debounce+0xbe>
 b28:	83 30       	cpi	r24, 0x03	; 3
 b2a:	41 f4       	brne	.+16     	; 0xb3c <Debounce+0x9c>
 b2c:	80 91 6f 01 	lds	r24, 0x016F
 b30:	81 11       	cpse	r24, r1
 b32:	15 c0       	rjmp	.+42     	; 0xb5e <Debounce+0xbe>
 b34:	84 e0       	ldi	r24, 0x04	; 4
 b36:	80 93 49 01 	sts	0x0149, r24
 b3a:	11 c0       	rjmp	.+34     	; 0xb5e <Debounce+0xbe>
 b3c:	84 30       	cpi	r24, 0x04	; 4
 b3e:	79 f4       	brne	.+30     	; 0xb5e <Debounce+0xbe>
 b40:	80 91 6f 01 	lds	r24, 0x016F
 b44:	81 11       	cpse	r24, r1
 b46:	0b c0       	rjmp	.+22     	; 0xb5e <Debounce+0xbe>
 b48:	20 93 6f 01 	sts	0x016F, r18
 b4c:	60 83       	st	Z, r22
 b4e:	07 c0       	rjmp	.+14     	; 0xb5e <Debounce+0xbe>
 b50:	84 30       	cpi	r24, 0x04	; 4
 b52:	29 f4       	brne	.+10     	; 0xb5e <Debounce+0xbe>
 b54:	10 92 49 01 	sts	0x0149, r1
 b58:	10 92 4a 01 	sts	0x014A, r1
 b5c:	10 82       	st	Z, r1
 b5e:	1f 91       	pop	r17
 b60:	0f 91       	pop	r16
 b62:	08 95       	ret

00000b64 <Joystick_monitor>:
 b64:	cf 93       	push	r28
 b66:	df 93       	push	r29
 b68:	86 e0       	ldi	r24, 0x06	; 6
 b6a:	91 e0       	ldi	r25, 0x01	; 1
 b6c:	0e 94 57 04 	call	0x8ae	; 0x8ae <Joy_ReadXY>
 b70:	86 e0       	ldi	r24, 0x06	; 6
 b72:	91 e0       	ldi	r25, 0x01	; 1
 b74:	0e 94 91 04 	call	0x922	; 0x922 <Joy_GetX>
 b78:	d8 2f       	mov	r29, r24
 b7a:	86 e0       	ldi	r24, 0x06	; 6
 b7c:	91 e0       	ldi	r25, 0x01	; 1
 b7e:	0e 94 94 04 	call	0x928	; 0x928 <Joy_GetY>
 b82:	c8 2f       	mov	r28, r24
 b84:	8d 2f       	mov	r24, r29
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 b8c:	83 e1       	ldi	r24, 0x13	; 19
 b8e:	91 e0       	ldi	r25, 0x01	; 1
 b90:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 b94:	8c 2f       	mov	r24, r28
 b96:	90 e0       	ldi	r25, 0x00	; 0
 b98:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 b9c:	80 91 06 01 	lds	r24, 0x0106
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 ba6:	83 e1       	ldi	r24, 0x13	; 19
 ba8:	91 e0       	ldi	r25, 0x01	; 1
 baa:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 bae:	83 e1       	ldi	r24, 0x13	; 19
 bb0:	91 e0       	ldi	r25, 0x01	; 1
 bb2:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 bb6:	60 e0       	ldi	r22, 0x00	; 0
 bb8:	86 e0       	ldi	r24, 0x06	; 6
 bba:	91 e0       	ldi	r25, 0x01	; 1
 bbc:	0e 94 65 04 	call	0x8ca	; 0x8ca <Joy_GetDeviationPercent>
 bc0:	08 2e       	mov	r0, r24
 bc2:	00 0c       	add	r0, r0
 bc4:	99 0b       	sbc	r25, r25
 bc6:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 bca:	83 e1       	ldi	r24, 0x13	; 19
 bcc:	91 e0       	ldi	r25, 0x01	; 1
 bce:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 bd2:	61 e0       	ldi	r22, 0x01	; 1
 bd4:	86 e0       	ldi	r24, 0x06	; 6
 bd6:	91 e0       	ldi	r25, 0x01	; 1
 bd8:	0e 94 65 04 	call	0x8ca	; 0x8ca <Joy_GetDeviationPercent>
 bdc:	08 2e       	mov	r0, r24
 bde:	00 0c       	add	r0, r0
 be0:	99 0b       	sbc	r25, r25
 be2:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 be6:	86 e1       	ldi	r24, 0x16	; 22
 be8:	91 e0       	ldi	r25, 0x01	; 1
 bea:	df 91       	pop	r29
 bec:	cf 91       	pop	r28
 bee:	0c 94 6e 03 	jmp	0x6dc	; 0x6dc <uart_sends>

00000bf2 <main>:
 bf2:	8a b1       	in	r24, 0x0a	; 10
 bf4:	8b 78       	andi	r24, 0x8B	; 139
 bf6:	8a b9       	out	0x0a, r24	; 10
 bf8:	8b b1       	in	r24, 0x0b	; 11
 bfa:	84 67       	ori	r24, 0x74	; 116
 bfc:	8b b9       	out	0x0b, r24	; 11
 bfe:	3d 9a       	sbi	0x07, 5	; 7
 c00:	45 98       	cbi	0x08, 5	; 8
 c02:	5b 9a       	sbi	0x0b, 3	; 11
 c04:	e9 9a       	sbi	0x1d, 1	; 29
 c06:	87 e6       	ldi	r24, 0x67	; 103
 c08:	90 e0       	ldi	r25, 0x00	; 0
 c0a:	0e 94 57 03 	call	0x6ae	; 0x6ae <uart_init>
 c0e:	0e 94 53 00 	call	0xa6	; 0xa6 <SPI_Init>
 c12:	0e 94 0b 03 	call	0x616	; 0x616 <nRF24_Init>
 c16:	6d e0       	ldi	r22, 0x0D	; 13
 c18:	71 e0       	ldi	r23, 0x01	; 1
 c1a:	80 e0       	ldi	r24, 0x00	; 0
 c1c:	0e 94 0a 02 	call	0x414	; 0x414 <nRF24_SetRXAddress>
 c20:	80 e1       	ldi	r24, 0x10	; 16
 c22:	91 e0       	ldi	r25, 0x01	; 1
 c24:	0e 94 13 02 	call	0x426	; 0x426 <nRF24_SetTXAddress>
 c28:	0e 94 69 01 	call	0x2d2	; 0x2d2 <nRF24_TX_Mode>
 c2c:	0e 94 23 05 	call	0xa46	; 0xa46 <HW_Timer2Init>
 c30:	0e 94 23 04 	call	0x846	; 0x846 <ADC_Init>
 c34:	8f e9       	ldi	r24, 0x9F	; 159
 c36:	9f e0       	ldi	r25, 0x0F	; 15
 c38:	01 97       	sbiw	r24, 0x01	; 1
 c3a:	f1 f7       	brne	.-4      	; 0xc38 <main+0x46>
 c3c:	00 c0       	rjmp	.+0      	; 0xc3e <main+0x4c>
 c3e:	00 00       	nop
 c40:	86 e0       	ldi	r24, 0x06	; 6
 c42:	91 e0       	ldi	r25, 0x01	; 1
 c44:	0e 94 49 04 	call	0x892	; 0x892 <Joy_SetIdleValues>
 c48:	d3 ea       	ldi	r29, 0xA3	; 163
 c4a:	82 e0       	ldi	r24, 0x02	; 2
 c4c:	d8 2e       	mov	r13, r24
 c4e:	93 e0       	ldi	r25, 0x03	; 3
 c50:	c9 2e       	mov	r12, r25
 c52:	21 ea       	ldi	r18, 0xA1	; 161
 c54:	f2 2e       	mov	r15, r18
 c56:	c1 e0       	ldi	r28, 0x01	; 1
 c58:	32 ea       	ldi	r19, 0xA2	; 162
 c5a:	e3 2e       	mov	r14, r19
 c5c:	0e 94 b2 05 	call	0xb64	; 0xb64 <Joystick_monitor>
 c60:	0e 94 c0 03 	call	0x780	; 0x780 <uart_readc>
 c64:	80 93 71 01 	sts	0x0171, r24
 c68:	02 e7       	ldi	r16, 0x72	; 114
 c6a:	11 e0       	ldi	r17, 0x01	; 1
 c6c:	25 e0       	ldi	r18, 0x05	; 5
 c6e:	4a e0       	ldi	r20, 0x0A	; 10
 c70:	50 e0       	ldi	r21, 0x00	; 0
 c72:	60 e2       	ldi	r22, 0x20	; 32
 c74:	89 e2       	ldi	r24, 0x29	; 41
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	0e 94 50 05 	call	0xaa0	; 0xaa0 <Debounce>
 c7c:	25 e0       	ldi	r18, 0x05	; 5
 c7e:	4a e0       	ldi	r20, 0x0A	; 10
 c80:	50 e0       	ldi	r21, 0x00	; 0
 c82:	60 e4       	ldi	r22, 0x40	; 64
 c84:	89 e2       	ldi	r24, 0x29	; 41
 c86:	90 e0       	ldi	r25, 0x00	; 0
 c88:	0e 94 50 05 	call	0xaa0	; 0xaa0 <Debounce>
 c8c:	25 e0       	ldi	r18, 0x05	; 5
 c8e:	4a e0       	ldi	r20, 0x0A	; 10
 c90:	50 e0       	ldi	r21, 0x00	; 0
 c92:	60 e1       	ldi	r22, 0x10	; 16
 c94:	89 e2       	ldi	r24, 0x29	; 41
 c96:	90 e0       	ldi	r25, 0x00	; 0
 c98:	0e 94 50 05 	call	0xaa0	; 0xaa0 <Debounce>
 c9c:	25 e0       	ldi	r18, 0x05	; 5
 c9e:	4a e0       	ldi	r20, 0x0A	; 10
 ca0:	50 e0       	ldi	r21, 0x00	; 0
 ca2:	64 e0       	ldi	r22, 0x04	; 4
 ca4:	89 e2       	ldi	r24, 0x29	; 41
 ca6:	90 e0       	ldi	r25, 0x00	; 0
 ca8:	0e 94 50 05 	call	0xaa0	; 0xaa0 <Debounce>
 cac:	86 e0       	ldi	r24, 0x06	; 6
 cae:	91 e0       	ldi	r25, 0x01	; 1
 cb0:	0e 94 a9 04 	call	0x952	; 0x952 <KleTransmiter_JoySteering>
 cb4:	90 91 72 01 	lds	r25, 0x0172
 cb8:	80 91 71 01 	lds	r24, 0x0171
 cbc:	91 11       	cpse	r25, r1
 cbe:	03 c0       	rjmp	.+6      	; 0xcc6 <main+0xd4>
 cc0:	88 23       	and	r24, r24
 cc2:	09 f4       	brne	.+2      	; 0xcc6 <main+0xd4>
 cc4:	e8 c0       	rjmp	.+464    	; 0xe96 <main+0x2a4>
 cc6:	87 36       	cpi	r24, 0x67	; 103
 cc8:	f1 f4       	brne	.+60     	; 0xd06 <main+0x114>
 cca:	80 91 70 01 	lds	r24, 0x0170
 cce:	88 23       	and	r24, r24
 cd0:	d1 f0       	breq	.+52     	; 0xd06 <main+0x114>
 cd2:	81 50       	subi	r24, 0x01	; 1
 cd4:	80 93 70 01 	sts	0x0170, r24
 cd8:	89 e1       	ldi	r24, 0x19	; 25
 cda:	91 e0       	ldi	r25, 0x01	; 1
 cdc:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 ce0:	80 91 70 01 	lds	r24, 0x0170
 ce4:	90 e0       	ldi	r25, 0x00	; 0
 ce6:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 cea:	80 e3       	ldi	r24, 0x30	; 48
 cec:	91 e0       	ldi	r25, 0x01	; 1
 cee:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 cf2:	10 92 76 01 	sts	0x0176, r1
 cf6:	10 92 77 01 	sts	0x0177, r1
 cfa:	10 92 78 01 	sts	0x0178, r1
 cfe:	10 92 79 01 	sts	0x0179, r1
 d02:	10 92 7a 01 	sts	0x017A, r1
 d06:	80 91 71 01 	lds	r24, 0x0171
 d0a:	84 37       	cpi	r24, 0x74	; 116
 d0c:	f1 f4       	brne	.+60     	; 0xd4a <main+0x158>
 d0e:	80 91 70 01 	lds	r24, 0x0170
 d12:	83 30       	cpi	r24, 0x03	; 3
 d14:	d0 f4       	brcc	.+52     	; 0xd4a <main+0x158>
 d16:	8f 5f       	subi	r24, 0xFF	; 255
 d18:	80 93 70 01 	sts	0x0170, r24
 d1c:	89 e1       	ldi	r24, 0x19	; 25
 d1e:	91 e0       	ldi	r25, 0x01	; 1
 d20:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 d24:	80 91 70 01 	lds	r24, 0x0170
 d28:	90 e0       	ldi	r25, 0x00	; 0
 d2a:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 d2e:	80 e3       	ldi	r24, 0x30	; 48
 d30:	91 e0       	ldi	r25, 0x01	; 1
 d32:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 d36:	10 92 76 01 	sts	0x0176, r1
 d3a:	10 92 77 01 	sts	0x0177, r1
 d3e:	10 92 78 01 	sts	0x0178, r1
 d42:	10 92 79 01 	sts	0x0179, r1
 d46:	10 92 7a 01 	sts	0x017A, r1
 d4a:	80 91 71 01 	lds	r24, 0x0171
 d4e:	82 37       	cpi	r24, 0x72	; 114
 d50:	69 f5       	brne	.+90     	; 0xdac <main+0x1ba>
 d52:	80 91 0c 01 	lds	r24, 0x010C
 d56:	8f 3f       	cpi	r24, 0xFF	; 255
 d58:	49 f1       	breq	.+82     	; 0xdac <main+0x1ba>
 d5a:	8f 5f       	subi	r24, 0xFF	; 255
 d5c:	80 93 0c 01 	sts	0x010C, r24
 d60:	83 e3       	ldi	r24, 0x33	; 51
 d62:	91 e0       	ldi	r25, 0x01	; 1
 d64:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 d68:	80 91 70 01 	lds	r24, 0x0170
 d6c:	90 e0       	ldi	r25, 0x00	; 0
 d6e:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 d72:	8a e3       	ldi	r24, 0x3A	; 58
 d74:	91 e0       	ldi	r25, 0x01	; 1
 d76:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 d7a:	80 91 0c 01 	lds	r24, 0x010C
 d7e:	90 e0       	ldi	r25, 0x00	; 0
 d80:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 d84:	80 e3       	ldi	r24, 0x30	; 48
 d86:	91 e0       	ldi	r25, 0x01	; 1
 d88:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 d8c:	80 91 0c 01 	lds	r24, 0x010C
 d90:	90 91 70 01 	lds	r25, 0x0170
 d94:	e0 92 75 01 	sts	0x0175, r14
 d98:	90 93 76 01 	sts	0x0176, r25
 d9c:	80 93 77 01 	sts	0x0177, r24
 da0:	10 92 78 01 	sts	0x0178, r1
 da4:	10 92 79 01 	sts	0x0179, r1
 da8:	10 92 7a 01 	sts	0x017A, r1
 dac:	80 91 71 01 	lds	r24, 0x0171
 db0:	86 36       	cpi	r24, 0x66	; 102
 db2:	69 f5       	brne	.+90     	; 0xe0e <main+0x21c>
 db4:	80 91 0c 01 	lds	r24, 0x010C
 db8:	88 23       	and	r24, r24
 dba:	49 f1       	breq	.+82     	; 0xe0e <main+0x21c>
 dbc:	81 50       	subi	r24, 0x01	; 1
 dbe:	80 93 0c 01 	sts	0x010C, r24
 dc2:	83 e3       	ldi	r24, 0x33	; 51
 dc4:	91 e0       	ldi	r25, 0x01	; 1
 dc6:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 dca:	80 91 70 01 	lds	r24, 0x0170
 dce:	90 e0       	ldi	r25, 0x00	; 0
 dd0:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 dd4:	8a e3       	ldi	r24, 0x3A	; 58
 dd6:	91 e0       	ldi	r25, 0x01	; 1
 dd8:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 ddc:	80 91 0c 01 	lds	r24, 0x010C
 de0:	90 e0       	ldi	r25, 0x00	; 0
 de2:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <uart_sendi>
 de6:	80 e3       	ldi	r24, 0x30	; 48
 de8:	91 e0       	ldi	r25, 0x01	; 1
 dea:	0e 94 6e 03 	call	0x6dc	; 0x6dc <uart_sends>
 dee:	80 91 0c 01 	lds	r24, 0x010C
 df2:	90 91 70 01 	lds	r25, 0x0170
 df6:	e0 92 75 01 	sts	0x0175, r14
 dfa:	90 93 76 01 	sts	0x0176, r25
 dfe:	80 93 77 01 	sts	0x0177, r24
 e02:	10 92 78 01 	sts	0x0178, r1
 e06:	10 92 79 01 	sts	0x0179, r1
 e0a:	10 92 7a 01 	sts	0x017A, r1
 e0e:	80 91 72 01 	lds	r24, 0x0172
 e12:	80 32       	cpi	r24, 0x20	; 32
 e14:	59 f4       	brne	.+22     	; 0xe2c <main+0x23a>
 e16:	f0 92 75 01 	sts	0x0175, r15
 e1a:	c0 93 76 01 	sts	0x0176, r28
 e1e:	c0 93 77 01 	sts	0x0177, r28
 e22:	c0 93 78 01 	sts	0x0178, r28
 e26:	c0 93 79 01 	sts	0x0179, r28
 e2a:	0e c0       	rjmp	.+28     	; 0xe48 <main+0x256>
 e2c:	90 91 71 01 	lds	r25, 0x0171
 e30:	93 37       	cpi	r25, 0x73	; 115
 e32:	69 f4       	brne	.+26     	; 0xe4e <main+0x25c>
 e34:	f0 92 75 01 	sts	0x0175, r15
 e38:	10 92 76 01 	sts	0x0176, r1
 e3c:	10 92 77 01 	sts	0x0177, r1
 e40:	10 92 78 01 	sts	0x0178, r1
 e44:	10 92 79 01 	sts	0x0179, r1
 e48:	c0 93 7a 01 	sts	0x017A, r28
 e4c:	1d c0       	rjmp	.+58     	; 0xe88 <main+0x296>
 e4e:	80 31       	cpi	r24, 0x10	; 16
 e50:	29 f4       	brne	.+10     	; 0xe5c <main+0x26a>
 e52:	d0 93 75 01 	sts	0x0175, r29
 e56:	c0 92 76 01 	sts	0x0176, r12
 e5a:	0e c0       	rjmp	.+28     	; 0xe78 <main+0x286>
 e5c:	80 34       	cpi	r24, 0x40	; 64
 e5e:	31 f4       	brne	.+12     	; 0xe6c <main+0x27a>
 e60:	d0 93 75 01 	sts	0x0175, r29
 e64:	84 e0       	ldi	r24, 0x04	; 4
 e66:	80 93 76 01 	sts	0x0176, r24
 e6a:	06 c0       	rjmp	.+12     	; 0xe78 <main+0x286>
 e6c:	84 30       	cpi	r24, 0x04	; 4
 e6e:	61 f4       	brne	.+24     	; 0xe88 <main+0x296>
 e70:	d0 93 75 01 	sts	0x0175, r29
 e74:	d0 92 76 01 	sts	0x0176, r13
 e78:	10 92 77 01 	sts	0x0177, r1
 e7c:	10 92 78 01 	sts	0x0178, r1
 e80:	10 92 79 01 	sts	0x0179, r1
 e84:	10 92 7a 01 	sts	0x017A, r1
 e88:	10 92 72 01 	sts	0x0172, r1
 e8c:	67 e0       	ldi	r22, 0x07	; 7
 e8e:	85 e7       	ldi	r24, 0x75	; 117
 e90:	91 e0       	ldi	r25, 0x01	; 1
 e92:	0e 94 ab 02 	call	0x556	; 0x556 <nRF24_SendPacket>
 e96:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <nRF24_Event>
 e9a:	e0 ce       	rjmp	.-576    	; 0xc5c <main+0x6a>

00000e9c <__divmodhi4>:
 e9c:	97 fb       	bst	r25, 7
 e9e:	07 2e       	mov	r0, r23
 ea0:	16 f4       	brtc	.+4      	; 0xea6 <__divmodhi4+0xa>
 ea2:	00 94       	com	r0
 ea4:	07 d0       	rcall	.+14     	; 0xeb4 <__divmodhi4_neg1>
 ea6:	77 fd       	sbrc	r23, 7
 ea8:	09 d0       	rcall	.+18     	; 0xebc <__divmodhi4_neg2>
 eaa:	0e 94 62 07 	call	0xec4	; 0xec4 <__udivmodhi4>
 eae:	07 fc       	sbrc	r0, 7
 eb0:	05 d0       	rcall	.+10     	; 0xebc <__divmodhi4_neg2>
 eb2:	3e f4       	brtc	.+14     	; 0xec2 <__divmodhi4_exit>

00000eb4 <__divmodhi4_neg1>:
 eb4:	90 95       	com	r25
 eb6:	81 95       	neg	r24
 eb8:	9f 4f       	sbci	r25, 0xFF	; 255
 eba:	08 95       	ret

00000ebc <__divmodhi4_neg2>:
 ebc:	70 95       	com	r23
 ebe:	61 95       	neg	r22
 ec0:	7f 4f       	sbci	r23, 0xFF	; 255

00000ec2 <__divmodhi4_exit>:
 ec2:	08 95       	ret

00000ec4 <__udivmodhi4>:
 ec4:	aa 1b       	sub	r26, r26
 ec6:	bb 1b       	sub	r27, r27
 ec8:	51 e1       	ldi	r21, 0x11	; 17
 eca:	07 c0       	rjmp	.+14     	; 0xeda <__udivmodhi4_ep>

00000ecc <__udivmodhi4_loop>:
 ecc:	aa 1f       	adc	r26, r26
 ece:	bb 1f       	adc	r27, r27
 ed0:	a6 17       	cp	r26, r22
 ed2:	b7 07       	cpc	r27, r23
 ed4:	10 f0       	brcs	.+4      	; 0xeda <__udivmodhi4_ep>
 ed6:	a6 1b       	sub	r26, r22
 ed8:	b7 0b       	sbc	r27, r23

00000eda <__udivmodhi4_ep>:
 eda:	88 1f       	adc	r24, r24
 edc:	99 1f       	adc	r25, r25
 ede:	5a 95       	dec	r21
 ee0:	a9 f7       	brne	.-22     	; 0xecc <__udivmodhi4_loop>
 ee2:	80 95       	com	r24
 ee4:	90 95       	com	r25
 ee6:	bc 01       	movw	r22, r24
 ee8:	cd 01       	movw	r24, r26
 eea:	08 95       	ret

00000eec <__itoa_ncheck>:
 eec:	bb 27       	eor	r27, r27
 eee:	4a 30       	cpi	r20, 0x0A	; 10
 ef0:	31 f4       	brne	.+12     	; 0xefe <__itoa_ncheck+0x12>
 ef2:	99 23       	and	r25, r25
 ef4:	22 f4       	brpl	.+8      	; 0xefe <__itoa_ncheck+0x12>
 ef6:	bd e2       	ldi	r27, 0x2D	; 45
 ef8:	90 95       	com	r25
 efa:	81 95       	neg	r24
 efc:	9f 4f       	sbci	r25, 0xFF	; 255
 efe:	0c 94 82 07 	jmp	0xf04	; 0xf04 <__utoa_common>

00000f02 <__utoa_ncheck>:
 f02:	bb 27       	eor	r27, r27

00000f04 <__utoa_common>:
 f04:	fb 01       	movw	r30, r22
 f06:	55 27       	eor	r21, r21
 f08:	aa 27       	eor	r26, r26
 f0a:	88 0f       	add	r24, r24
 f0c:	99 1f       	adc	r25, r25
 f0e:	aa 1f       	adc	r26, r26
 f10:	a4 17       	cp	r26, r20
 f12:	10 f0       	brcs	.+4      	; 0xf18 <__utoa_common+0x14>
 f14:	a4 1b       	sub	r26, r20
 f16:	83 95       	inc	r24
 f18:	50 51       	subi	r21, 0x10	; 16
 f1a:	b9 f7       	brne	.-18     	; 0xf0a <__utoa_common+0x6>
 f1c:	a0 5d       	subi	r26, 0xD0	; 208
 f1e:	aa 33       	cpi	r26, 0x3A	; 58
 f20:	08 f0       	brcs	.+2      	; 0xf24 <__utoa_common+0x20>
 f22:	a9 5d       	subi	r26, 0xD9	; 217
 f24:	a1 93       	st	Z+, r26
 f26:	00 97       	sbiw	r24, 0x00	; 0
 f28:	79 f7       	brne	.-34     	; 0xf08 <__utoa_common+0x4>
 f2a:	b1 11       	cpse	r27, r1
 f2c:	b1 93       	st	Z+, r27
 f2e:	11 92       	st	Z+, r1
 f30:	cb 01       	movw	r24, r22
 f32:	0c 94 9b 07 	jmp	0xf36	; 0xf36 <strrev>

00000f36 <strrev>:
 f36:	dc 01       	movw	r26, r24
 f38:	fc 01       	movw	r30, r24
 f3a:	67 2f       	mov	r22, r23
 f3c:	71 91       	ld	r23, Z+
 f3e:	77 23       	and	r23, r23
 f40:	e1 f7       	brne	.-8      	; 0xf3a <strrev+0x4>
 f42:	32 97       	sbiw	r30, 0x02	; 2
 f44:	04 c0       	rjmp	.+8      	; 0xf4e <strrev+0x18>
 f46:	7c 91       	ld	r23, X
 f48:	6d 93       	st	X+, r22
 f4a:	70 83       	st	Z, r23
 f4c:	62 91       	ld	r22, -Z
 f4e:	ae 17       	cp	r26, r30
 f50:	bf 07       	cpc	r27, r31
 f52:	c8 f3       	brcs	.-14     	; 0xf46 <strrev+0x10>
 f54:	08 95       	ret

00000f56 <_exit>:
 f56:	f8 94       	cli

00000f58 <__stop_program>:
 f58:	ff cf       	rjmp	.-2      	; 0xf58 <__stop_program>
